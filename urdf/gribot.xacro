<?xml version="1.0"?>
<robot name="gribot" xmlns:xacro="http://www.ros.org/wiki/xacro">

   <xacro:include filename="$(find gribot)/urdf/wheel.urdf.xacro" />

<!-- Defining the colors used in this robot -->

   <material name="Black">
      <color rgba="0.0 0.0 0.0 1.0"/>
   </material>

   <material name="Red">
      <color rgba="0.8 0.0 0.0 1.0"/>
   </material>

   <material name="White">
      <color rgba="1.0 1.0 1.0 1.0"/>
   </material>

   <material name="Blue">
      <color rgba="0.0 0.0 0.8 1.0"/>
   </material>


   <!-- Property list -->
   <!-- All units in m-kg-s-radians unit system -->
   <xacro:property name="M_PI" value="3.1415926535897931" />      
   <xacro:property name="M_PI_2" value="1.570796327" />
   <xacro:property name="DEG_TO_RAD" value="0.017453293" />

   <!-- Main body length height width -->
   <xacro:property name="base_height"   value="0.25" /> <!-- in meter -->
   <xacro:property name="base_width"    value="0.6"  /> <!-- in meter -->
   <xacro:property name="base_lenght"   value="0.8"  /> <!-- in meter -->
   <xacro:property name="base_mass"     value="20.0" /> <!-- in kg -->


   <!-- Macro for calculating inertia of cylinder -->
   <xacro:macro name="cylinder_inertia" params="m r h">
      <inertia ixx="${ m * ( 3 * r*r + h*h ) / 12}" ixy="0" ixz="0"
               iyy="${ m * ( 3 * r*r + h*h ) / 12}" iyz="0"
               izz="${ m * r / 2}" />
   </xacro:macro>


   <!-- Macro for calculating inertia of a box -->
   <xacro:macro name="box_inertia" params="m x y z">
      <inertia ixx="${0.0833333 * m * (y*y + z*z)}" ixy="0.0" ixz="0.0"
               iyy="${0.0833333 * m * (x*x + z*z)}" iyz="0.0"
               izz="${0.0833333 * m * (x*x + y*y)}" />
   </xacro:macro>


   <!-- Base footprint -->
   <!-- base_footprint is a fictious link(frame) that is on the ground right below base_link origin -->

   <link name="base_footprint">
      <!-- <inertial> -->
         <!-- <mass value="0.0001" /> -->
         <!-- <origin xyz="0 0 0"  /> -->
         <!-- <inertia ixx="0.0001" ixy="0.0" ixz="0.0" -->
         <!--      iyy="0.0001" iyz="0.0" -->
         <!--      izz="0.0001" /> -->
      <!-- </inertial> -->
      <visual>
         <origin xzy="0 0 0" rpy="0 0 0" />
         <geometry>
            <box size="0.001 0.001 0.001" />
         </geometry>
      </visual>
   </link>


   <gazebo reference="base_footprint">
      <turnGravityOff>false</turnGravityOff>
   </gazebo>


   <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 0.1" rpy="0 0 0" />
      <parent link="base_footprint" />
      <child link="base_link" />
   </joint>


   <!-- Base link -->
   <!-- Actual body/chassis of the robot -->

   <link name="base_link">
      <inertial>
         <mass value="${base_mass}" />
         <!-- the3x3 rotational inertia matrix -->
         <box_inertia m="${base_mass}" x="${base_lenght}" y="${base_width}" z="${base_height}" />
         <origin xyz="0 0 0" />
      </inertial>
      <visual>
         <origin xyz="0 0 0" rpy="0 0 0" />
         <geometry>
            <box size="${base_lenght} ${base_width} ${base_height}" />
         </geometry>
         <material name="Blue" />
      </visual>
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0" />
         <geometry>
            <box size="${base_lenght} ${base_width} ${base_height}" />
         </geometry>
      </collision>
   </link>
   <gazebo reference="base_link">
      <material>Gazebo/White</material>
      <turnGravityOff>false</turnGravityOff>
   </gazebo>

   <!-- Skid Steering Drive for 4 wheel robot -->
   <gazebo>
      <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
         <updateRate>100</updateRate>
         <robotNameSpace>/</robotNameSpace>
         <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
         <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
         <leftRearJoint>back_left_wheel_joint</leftRearJoint>
         <rightRearJoint>back_right_wheel_joint</rightRearJoint>
         <wheelSeparation>0.4</wheelSeparation>
         <wheelDiameter>0.32</wheelDiameter>
         <robotBaseFrame>base_link</robotBaseFrame>
         <torque>20</torque>
         <topicName>cmd_vel</topicName>
         <broadcastTF>false</broadcastTF>
         <commandTopic>cmd_vel</commandTopic>      <!-- default to avoid warning -->
         <odometryTopic>odom</odometryTopic>       <!-- default to avoid warning -->
         <odometryFrame>odom</odometryFrame>       <!-- default to avoid warning -->
         <covariance_x>0.00100</covariance_x>      <!-- default to avoid warning -->
         <covariance_y>0.00100</covariance_y>      <!-- default to avoid warning -->
         <covariance_yaw>0.010000</covariance_yaw> <!-- default to avoid warning -->
      </plugin>
   </gazebo>

<!-- Wheel Definition -->
   <wheel fb="front" lr="right" parent="base_link" translateX="0.2" translateY="${base_width/2+0.05}"       translateZ="-0.065" flipY="1"/>
   <wheel fb="front" lr="left"  parent="base_link" translateX="0.2" translateY="${-1*(base_width/2+0.05)}"  translateZ="-0.065" flipY="1"/>
   <wheel fb="back"  lr="right" parent="base_link" translateX="-0.2" translateY="${base_width/2+0.05}"      translateZ="-0.065" flipY="1"/>
   <wheel fb="back"  lr="left"  parent="base_link" translateX="-0.2" translateY="${-1*(base_width/2+0.05)}" translateZ="-0.065" flipY="1"/>


</robot>
