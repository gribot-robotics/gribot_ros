<?xml version="1.0"?>

<!-- Launch file for gribot robot -->

<launch>


   <!-- Values passed by command line input -->

   <arg name="paused"       default="false" />
   <arg name="use_sim_time" default="true" />
   <arg name="gui"          default="true" />
   <arg name="headless"     default="false" />
   <arg name="debug"        default="false" />

   <master auto="start" />


   <!-- We resume the logic in empty_world.launch -->

   <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch"> -->
      <!-- <arg name="debug"        value="$(arg debug)" /> -->
      <!-- <arg name="gui"          value="$(arg gui)" /> -->
      <!-- <arg name="paused"       value="$(arg paused)" /> -->
      <!-- <arg name="use_sim_time" value="$(arg use_sim_time)" /> -->
      <!-- <arg name="headless"     value="$(arg headless)" /> -->
   <!-- </include> -->

   <include file="$(find gazebo_ros)/launch/willowgarage_world.launch"/>

   <!-- Load robot description on Parameter Server -->

   <param name="robot_description" command="$(find xacro)/xacro --inorder $(find gribot)/urdf/gribot.xacro" >
    <arg name="load_robot_description" value="true"/>
   </param>
   <param name="use_gui" value="$(arg gui)" />


   <!-- very important for Joystick -->
   <!-- defines which field contain which axe -->

   <param name="axis_linear" value="1" type="int" />
   <param name="axis_angular" value="0" type="int" />


   <!-- Start the joystick nodes -->

   <!-- <node name="joystick" pkg="joy" type="joy_node" output="screen" respawn="true" >
      <param name="dev" type="string" value="/dev/input/js0" />
      <param name="deadzone" value="0.12" />
   </node>  -->


   <!-- Start the joystick node transformer -->

   <!-- <node name="teleopjoy" pkg="gribot" type="teleopjoy" respawn="true" >
      <param name="dev" type="string" value="/dev/input/js0" />
      <param name="deadzone" value="0.12" />
   </node> -->

   <node name="key_teleop" pkg="key_teleop" type="key_teleop.py" output="screen">
      <remap from="key_vel" to="cmd_vel"/>
   </node>

   <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->

   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model gribot -param robot_description" />


   <!-- Start rviz -->

   <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gribot)/rviz/urdf.rviz" required="true" clear_params="true" />


   <!-- Start robot state publisher: publish the state of the robot -->
   <!-- publish tf between links -->

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="use_tf_static" value="true" />
   </node>


   <!-- Start the robot joint state publisher -->
   <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->


   <!-- Start CANOpen nodes for controlling motors -->

<!--   <node name="driver" pkg="canopen_motor_node" type="canopen_motor_node" output="screen" clear_params="true" launch-prefix=""> -->
<!--      <rosparam command="load" file="$(find gribot)/config/can/can0.yaml" /> -->
<!--   </node> -->

   <!-- Start map server -->

   <include file="$(find gribot)/launch/include/map_server.launch" />


   <!-- Start gmapping -->

   <!-- <include file="$(find gribot)/launch/include/slam_gmapping.launch" /> -->


   <!-- Start move_base -->

   <include file="$(find gribot)/launch/include/move_base.launch" />


   <!-- Start amcl -->

   <include file="$(find gribot)/launch/include/amcl.launch" />


</launch>
